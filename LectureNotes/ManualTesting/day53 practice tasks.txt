
1. Create a functional interface named ListFunction that contains the following abstract method:
	
		R apply(List<T>  list);

	Use ListFunction functional interface to:
		1.1 Create a function that can return the maximum number from a list of Integer

		1.2 Create a function that can return the minimum number from a list of Integer

		1.3 Create a function that can return the longest String from a List of String

		1.4 Create a function that can return the shortest String from a List of String

		1.5 Create a function that can convert List of integer to int array

		1.6 Create a function that can convert List of double to double array


2. Create a functional interface named ArrayFunction that contains the following abstract method:

		R apply(T[] array);

	Use the ArrayFunction interface to:

		2.1 Create a function that can return the maximum number from an array of Integers

		1.2 Create a function that can return the minimum number from an array of Integers

		1.3 Create a function that can return the longest String from an array of String

		1.4 Create a function that can return the shortest String from an array of String

	

3. Use Predicate Functional interface to:
		3.1 Create a function that can verify if a strong contains duplicated characters

		3.2 Create a function that can verify if a password is a strong password. Characteristics of strong passwords are:
		        1 Password must be at least have 8 characters long, and should not contain space
		        2 PassWord should at least contain one upper case letter
		        3 PassWord should at least contain one lower case letter
		        4 Password should at least contain one special characters
		        5 Password should at least contain a digit

4. Use Function functional interface to:
		4.1 Create a function that can return the sum of digits from a string

		4.2 Create a function that can convert a Set of Integers to List of Integers

		4.3 Create a function that can convert a Set of String to List of String

		4.4 Create a function that can return the reversed version of an int array

		4.5 Create a function that can return the reversed version of a String array

		4.6 Create a function that can return the sorted (decending) version of an int array
				Note: you can use the reverse function you created at 4.4

		4.7 Create a function that can return the sorted (decending) version of a String array
				Note: you can use the reverse function you created at 4.5


5. Use BiPredicate functional interface to:
		5.1 Create a function that can check if two array are equal and contains the same elemnts
				ex: arr1 = {3,2,1}
					arr2 = {2,1,3}

				output: true

		5.2 Create a function that can check if the first array contains all the elemnts of the second array:
				ex: arr1 = {1,2,3,4,5,6}
					arr2 = {7,8}

				output: false

		5.3 Create a function that can check if two List of Integers are equal and contains the same elemnts 
				ex: list1 = {3,2,1}
					list2 = {2,1,3}

				output: true

		5.4 Create a function that can check if the first List contains all the elemnts of the second List:
				ex: list1 = {1,2,3,4,5,6}
					list2 = {7,8}

				output: false


6. Use BiFunction functional interface to:
		6.1 Create a fucntion that can returns the common characters of two strings
				ex: str1 = "Python"
					str2 = "Wooden Spoon"

				output: on

		6.2 Create a function that can return the common elements of two integer arrays

		6.3 Create a function that can return the common elements of two String arrays

		6.4 Create a function that can return the common elements of two Lists of Integers

		6.5 Create a function that can return the common elements of two Lists of Strings


Stream Tasks:
	1. Write a program that can remove the duplicated elements of an array of String

	2. Write a program that can remove the duplicated elements of a List of String

	3. Write a program that can count how many "java" and "python" does the array has:
			ex: array = {"Java", "jAVa", "pythON"}

			output:
				countJava = 2
				countPython = 1

	4.4 Write a program that can count how many negative numbers does the array has
		ex: arr = {1,2,3,4,-4,5,-5}

		output:
			2

	4.4 Write a program that can count how many Positive numbers does the List has
		ex: List = {1,2,3,4,-4,5,-5}

		output:
			5

	4. Wirte a program that can return all the negative numbers of the array as a new array
		ex:
			arr = {1,2,3,4,-4,5,-5}

		output:
			{-4, -5}

	4. Wirte a program that can return all the positive numbers of List without the duplcaites
		ex:
			list = {1,2,3,4,-4,5,-5,1,2,3,4}

		output:
			{1,2,3,4,5}


	5. Wirte a program that can return the palindrome Strings from a list:
		Ex:
			list = {"Java", "level", "Anna", "Wooden Spoon"};

		output:
			{"level", "Anna"}

	6. Write a program that can returun the unique elements of an array as a new array:

		Ex: arr = {1,1,2,3,3,4,5,5,6};

		output:
			{2,4,6}






















